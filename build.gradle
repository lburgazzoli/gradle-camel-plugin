// *****************************************************************************
// 
// *****************************************************************************

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.5.3'
    }
}

// *****************************************************************************
//
// *****************************************************************************

plugins {
    id 'java'
    id 'groovy'
    id 'maven'
    id 'maven-publish'
    id 'signing'
    id 'net.researchgate.release' version '2.3.4'
}

apply plugin: 'io.codearte.nexus-staging'

sourceCompatibility = 1.7
targetCompatibility = 1.7
group               = 'com.github.lburgazzoli'
description         = 'A gradle plugin to run Camel standalone<'

ext {
    gradleVersion    = '2.9'
    gradleScriptDir  = "${rootProject.projectDir}/gradle"
    isReleaseVersion = !version.endsWith("SNAPSHOT")
    gitRoot          = "https://github.com/lburgazzoli"
    gitProject       = "https://github.com/lburgazzoli/${project.name}"
    inceptionYear    = '2015'

    if(!project.hasProperty('nexusUsername') && !project.hasProperty('nexusPassword')) {
        nexusUsername = "$System.env.CI_DEPLOY_USERNAME"
        nexusPassword = "$System.env.CI_DEPLOY_PASSWORD"
    }

    versions = [
        spock : '1.0-groovy-2.4'
    ]
}

repositories {
    mavenCentral()    
    mavenLocal()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()

    testCompile("org.spockframework:spock-core:$versions.spock") {
        exclude(module: 'groovy-all')
    }
}

jar {
    baseName = "${project.name}"

    manifest {
        attributes['Implementation-Title'   ] = "${group}.${project.name}-${project.version}"
        attributes['Implementation-Version' ] = project.version
        attributes['Implementation-Vendor'  ] = 'Luca Burgazzoli'
    }
}

// *****************************************************************************
//
// *****************************************************************************

signing {
    required {
        isReleaseVersion && gradle.taskGraph.hasTask("publish")
    }

    sign configurations.archives
}


publishing {
    repositories {
        maven {
            url isReleaseVersion ?
                    'https://oss.sonatype.org/service/local/staging/deploy/maven2/' :
                    'https://oss.sonatype.org/content/repositories/snapshots/'

            credentials {
                username nexusUsername
                password nexusPassword
            }
        }
    }

    publications {
        camelPlugin(MavenPublication) {
            pom.withXml {
                def root = asNode()
                root.appendNode 'name', project.name
                root.appendNode 'description', project.name
                root.appendNode 'url', gitProject
                root.appendNode 'inceptionYear', inceptionYear

                def scm = root.appendNode('scm');
                scm.appendNode 'url', project.gitProject
                scm.appendNode 'connection', "scm:git:${project.gitProject}.git"
                scm.appendNode 'developerConnection', "scm:git:${project.gitProject}.git"

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode 'name', 'The Apache Software License, Version 2.0'
                license.appendNode 'url', 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                license.appendNode 'distribution', 'repo'

                def devs = root.appendNode('developers')

                def lburgazzooli = devs.appendNode('developer')
                lburgazzooli.appendNode 'id', 'lburgazzoli'
                lburgazzooli.appendNode 'name', 'Luca Burgazzoli'
            }
        }
    }
}

// *****************************************************************************
//
// *****************************************************************************

afterReleaseBuild.dependsOn publish

task nexusRelease(dependsOn: closeAndPromoteRepository) {
    println "Release Repo"
}